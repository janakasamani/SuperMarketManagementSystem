# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class EditItemRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, type: str=None, price: float=None, expiry_date: date=None):  # noqa: E501
        """EditItemRequest - a model defined in Swagger

        :param name: The name of this EditItemRequest.  # noqa: E501
        :type name: str
        :param type: The type of this EditItemRequest.  # noqa: E501
        :type type: str
        :param price: The price of this EditItemRequest.  # noqa: E501
        :type price: float
        :param expiry_date: The expiry_date of this EditItemRequest.  # noqa: E501
        :type expiry_date: date
        """
        self.swagger_types = {
            'name': str,
            'type': str,
            'price': float,
            'expiry_date': date
        }

        self.attribute_map = {
            'name': 'name',
            'type': 'type',
            'price': 'price',
            'expiry_date': 'expiry_date'
        }
        self._name = name
        self._type = type
        self._price = price
        self._expiry_date = expiry_date

    @classmethod
    def from_dict(cls, dikt) -> 'EditItemRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EditItemRequest of this EditItemRequest.  # noqa: E501
        :rtype: EditItemRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this EditItemRequest.


        :return: The name of this EditItemRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this EditItemRequest.


        :param name: The name of this EditItemRequest.
        :type name: str
        """

        self._name = name

    @property
    def type(self) -> str:
        """Gets the type of this EditItemRequest.


        :return: The type of this EditItemRequest.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this EditItemRequest.


        :param type: The type of this EditItemRequest.
        :type type: str
        """

        self._type = type

    @property
    def price(self) -> float:
        """Gets the price of this EditItemRequest.


        :return: The price of this EditItemRequest.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this EditItemRequest.


        :param price: The price of this EditItemRequest.
        :type price: float
        """

        self._price = price

    @property
    def expiry_date(self) -> date:
        """Gets the expiry_date of this EditItemRequest.


        :return: The expiry_date of this EditItemRequest.
        :rtype: date
        """
        return self._expiry_date

    @expiry_date.setter
    def expiry_date(self, expiry_date: date):
        """Sets the expiry_date of this EditItemRequest.


        :param expiry_date: The expiry_date of this EditItemRequest.
        :type expiry_date: date
        """

        self._expiry_date = expiry_date
